# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The goal of this file is to derive tests that can be used to
# evaluate RSA keys. E.g. we want a test that generalizes and identifies
# the primes below.
#
# "Ron was wrong, Whit is right" https://eprint.iacr.org/2012/064.pdf
# -> no primes were published
#
# Primes from https://smartfacts.cr.yp.to/smartfacts-20130916.pdf
# These primes were generated by weak random number generators.
#
weak_primes = [
  0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002f9,
  0xc92424922492924992494924492424922492924992494924492424922492924992494924492424922492924992494924492424922492924992494924492424e5,
  0xc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000101ff,
  0xd24949244924249224929249924949244924249224929249924949244924249224929249924949244924249224929249924949244924249224929249924949d7,
  0xf6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdbc1,
  0xdb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6c6e23,
  0xedb6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b867,
  0xd0840842421021080842842121081084842142101084084242102108084284212108108484214210108408424210210808428421210810848421421010840985,
  0xe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f,
  0xf5ad5ad6d6b56b5a5ad6ad6b6b5ab5adad6bd6b5b5ad5ad6d6b56b5a5ad6ad6b6b5ab5adad6bd6b5b5ad5ad6d6b56b5a5ad6ad6b6b5ab5adad6bd6b5b5ad5d39,
  0xc28550a128500a14850aa14250a114280a144285a14228501428850a428550a128500a14850aa14250a114280a144285a14228501428850a428550a128500a6f,
  0xfdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefe0b1,
  0xd2494924492424922492924992494924492424922492924992494924492424922492924992494924492424922492924992494924492424922492924992484a0f,
  0xe94a94a5a529529494a54a525294294a4a52a529294a94a5a529529494a54a525294294a4a52a529294a94a5a529529494a54a525294294a4a52a529294b9af5,
  0xdb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d7015,
  0xca52a529294a94a5a529529494a54a525294294a4a52a529294a94a5a529529494a54a525294294a4a52a529294a94a5a529529494a54a525294294a4a52a601,
  0xc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002030b,
  0xd8c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c69107,
  0xf18c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c1907,
  0xf7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd8289,
  0xc4214210108408424210210808428421210810848421421010840842421021080842842121081084842142101084084242102108084284212108108484214369,
  0xef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf7bdbdefdef7f7bd7bdedef7ef7b7bdebdefef7bf969,
  0xd4e682e94f1d6018a02056c0db850a74b3591b0f840514ce4017b2f5d25925ba2429a66e384b5be96e6a0a03d4a11eba10416018de3b3e354477250037b6f813,
  0xcac05be5c1eabf0c21f8e95ce5d3c0777904282d1fd0c1738d727e197a0a32fda4cc59cc50b99d29f7fa8d07c972402ab88573e255db6bab05505812c73c2911,
  0xcf052499061243cd82cd1b2059446c963487834d929ac929d92b259245254c7828ed3e92259292c924d24947d4896d1545f4001029b3b265d0ea4d144e242dbd,
  0xfa94a972e2dcff068ee1257e228b53e9b9fcf46877f07daaa4d13c2bedf132d07730f549f4691f68553f84be8ff405f16a663d8fb8f82987bd9e073a8108edc3,
  0xef7befbdbdef9ef6f7bd7bde9ef7ef7b7bdd9dcfef7b37bd9feddef7b7bd7bdedee6ef3b5bde3de7ed7bfa99adebdef7b7bd77d7cff1ee7b7bdebdeeef79f8ab,
  0xeeb2919e1dc9ce33c2a0d9e190465b164a53c7c03e9a3d009ecf8fd6bdf743e04444332b7ff4a0e8f53b5123a5422563a06a487cd6cb5f36cd5411f0ae4dbc69,
  0xf51576e530188d59bbc5f4f6ec9e824d7a9e70142952b11c49a6f38188ad9dbe3d29d1d9498b7aeffc4d9b0420f71895f62e2a7b79d4887e45b6227e0b84fb97,
  0xd83f22a49af67d7f196df580d514464d6dbb880b03bea50ddcc1f931ef7f09af2f880de26d88cbf24567302a0d6eed7c8eab859aa0c1cc18bd8efacdce194c13,
  0xc1df3e8db5f7b7f456edc1f60d23f60360536565836ce37af6f02e55de24a8dc373f3c5d49c93ba6fee0d44d08bc5fb0655781adee5c05777fd4da2bcd803d0f,
  0xe279872638463a0a32a1412b13efccfa5ed68db44963c7f6955a3816bcaa33f94794c8b75298ddf4a8664e485ef99e6d9469f5187939e395cb1f09e666786741,
  0xce73e73939ce9ce7e738739c9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39cece73ead7,
  0xd92ae5c6453efec55c5614207827de2b77bf3ef027f4230f8aac1fd9b0d69fdc61934132766f8dd1d8cb22ec38d834037eff6d9dd3535b9e582fbdd2327c9ce5,
  0xc080000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000001003f,
  0xfff7fffffefffffffffffffffffffffe7ffffff7fffffffffffffffffffffd7ffffffbffffff7bfffbfcffff7fffffffffbf00000000000000000000000000c1,
  0xeb6f80ff65b4a6d462cfa5961f542f25e207667752b0482f5ac9dc091f4dc854de9c73b288aaa5da5298a33928f7b2920f89b81e3635932bc9db99a34e52b82b,
  0xfdf7b9bffbffdebeb28592b76f69bbffbffdafaeffd9f7bdf1ee7bfa6e2f33bb67d5a5b5676d2bf6a1de3626f06be367ffde73db1e01f5d3855f21f0eda8b4db,
  0xe643203b22b4048427210bd390d45a3a62ac132c0063990067686123d50128812e09411f27098400c841e09183400431018100a2b1cc0954c0405026420e8c7f,
  0xffefef7ffde6ffff7fffffbfffffffbffeffbffdfffffffffffffffffffffffffffffffff1fcffffef46fffdfdfff7fffffffffffffffffffffeefefeceffe8d,
  0xf6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66b37b6db019a4697,
  0xc000b800000000000000000000000000000000000000000000000000000000000000068000000000000000000000000000000000000000000000000000000251,
  0xccc5ebfea2f4beb8b62dfef5429f97f06af0af8d08159d21df4540a0197ffdb8386c8ebb18bd70b0f46c9615d2fcd0ea38a2cadb522cf79f2c3ab27d9564a197,
  0xedb6b6dbb6dbdb6ddb6d6db66db6b6dbb6dbdb6ddb6d6db66db6b6dbb6dadb6d9b6f6db66da6b6fbf6cb9b7ddb656d9e6d36a7dbb673ba6ddb6f6db66df6b5e5,
  0xe7fa15ab6c3d2c3d13960f598cd2bbf74a688580e5fdc70064563a10558f1dfd36d5e8aec88897c79d73ebdcbec1b5f0121175c8aae69e3a31a63f9e66e0bfc5,
  0xffb308867fee16267feb2b1af212ffefffffe4308866fff5fffefe13ffcf869aff4bf907ff1f9393fff0fff3fffcfff7ff3ef703ffaa8c7ffffe491affeff3b1,
  0xc010208a48c18021210810848421423010a4084242006309ca468d2123081084a520431000c40a425210210a084a8ce1290810cc84204a9011ac2842401022e1,
  0xe739729c9ce7ce73539c29cec126e7383b8e89bd2207faed08428421318c1084c410631858c68c63e31035cc8c63ce31318810c64331231818c60e63623b32a3,
  0xfeb1b9efa29f64ed53628a10a924b5268163dd887f653a6b82edb063b6874c2039e4938018ab949a3c28cdc785fe2be58872c0c8a9ec5171e37ea6a82d5d46d7,
  0xc0100000000000000000000000009000004260400c000000000018000000000040208000000000202000010800000000000000000000000000028000000002f3,
  0xf9d5834f918b673e1f7eaae3cc5d97dd2706dd8de9c5b2fbef679b2c196933fe30f62ac3f7fcc1c593fb63a0bbb8838b8486eac959cc3949ea9182c46396fbcb,
  0xdac45d37aadacfec73b3184ef43d52d6314754abd38414dde03ade396bd809aa2811047f015c9c71f0cbb0a91028190adeacc36165b0e0e6fce64549f947e0d5,
  0xf49808713746a41a331625a7cb389611eaa3905984245f99e828f17f867413cfae91230478715024db5ead44beb20fbc73a23a271d627a11747b5823f753eb03,
  0xd67a7b111c0401971f57806a2be12a174b8923fd3972ec64fe3de3ee96594a14207831d12f16f545851cad6356bb16221bee68eb2fee9427e0da0ca5f98e5861,
  0xe83071df5288c373a5bc43fb20309e25e99fd85b61a9a4e6f3f71511b98f7ec87047fb32520d94cd7753dbe173304445ca648231f601dd19d3cd40c74190c71d,
  0xed4294b5a529529c94250ad35394214a4a52a569a94a94a5e56b52948ca74a52529429524a5aa529294a9ca5e1295294d4a74a727394696a4a13a529236a968d,
  0xd621eb6e5ab7992c6efba5f34a7b7b28026fc93138998c113831dbaaaca1a15738a7b7a9d191bcd77955b92b75263ad9f6bbd4ce0b4edca1efd5f3e24b3a2889,
  0xd9a43ff058df6b8d55085028eac413a7439e1dc89e5d6e8b5de09e7bc7483d762788ff9e36527ff67c39360cfc0d2a75986b7fb35614027cffb932ee1112ee8d,
  0xe492924992494924492524922492924992494924492424922492924992494924492424922492924992494925492424922492924992494925492524922492938f,
  0xf9cf9b29d767edb655b2f6bf964bce697f652fb669b322eb63dffb6e7a6c69bb798396d284d85169883d42a6ec96b292761d6dcd7ab595b2ad0a9a5d7e97fe41,
  0xfffefffefffffffffffefffefffefffefffffffefffffffefffefffefffffffffffefffefffefffefffefffeffffffff000000000000000000000000000000bd,
  0xf9ce9ce7e738738c9ce7ce73739cb9cece73e738398e9ce7e719739c9ce7ce7373dc39cece73e53839ce9ce7e7b9739c9ce7ce73739c39cece73e73839ce9d63,
  0xd53bd2f169ab7fb38abb7f05cb1550e200914674b65ce176001ffeb29dbd1e90c21a77e28c6dbfd6e6a782baaba532e2a98eff9ed8e924986af702c48504d0d1,
  0xc36e8f2addb602d9d18b2b040bc7a00bc7046b2030c2d3e91c4c161ed562a31d2d056afc759042a46c28e218e25e7c7882fb1cb2d66039ed961dace5ea69c5d7,
  0xed15cb0fde1567b278ef2422ee01ed658173594b0bcb71594a18df455fc75ca7c5b529bb6b9ec229be6ba977773eca917ac08a1e9f557adf079ab8bceb2bc01b,
  0xd00b0dd78fd35c88db31806803799deab89b8b36c39dc0321574801fb936f90e2920f3dd65400ddc00be90ebcefdd62d5c5c062c200bdb04aa6a5acf697e2a0d,
  0xd0054c94020831e800450e05811840282088a906825002d9a0c340938dc0b20628072f800334102c08010309c020800710200c04a604083700aa440088411987,
  0xc7592d7dc9ee1031dcd3d30f43028858305ac46ac981cafa164a8000a9c6eeb698181505242ac9dfee9e51c92460b987dbc8161def71863d35ac18fa1235a903,
  0xfffbfcf7f7ffdf3dfffef5ffffffbfffff9ffffffffdff7dffffff9ffffffef7dffffffffbfffdfffeffbffffffffffffff77fffdfffffffffff1fffffffff35,
  0xf5eb05d73ad4df3cdaf4fd2eaf41e8e405952b7a327479147fffa33eb829039e77ff116f9e4958a3f604743ed2c55ba67b47631842905dbc2f12c66fb6c4e40f,
  0xc3ff4d30474f40df0e7ffffdfa92ffff11d59d35d214ffff85c357c5c85ed72acaf1fb7d43f76d85ee6b4fb3ffdd60d5095ef1f290df4ff888e7e37efe4f9e8f,
  0xcc7b18295347824ccb395bed351993c598c7cf7f4e32dcb9ab7a5d7e0baa7626d1b8dc651b34f5e4f5d3f2530b52fb9bd10e75259b36d774f059141bf9ede911,
  0xe675a7059b1e6df20198f8a75a0ab28123fff79a67f59c7049fd37d48128f3b3a9b69475b902f4bc854ca1deecbce73cdab89b17ae3c6401a9d43594775a926b,
  0xef7b77bd3defdef7f7b47bdedef76f7b7bdebdefef7bf7bdbdee7ef7b73d7b9edef7ef7b7b9e3deeef7bf7b9bdefd6ffffb97bdedef7ef7b7b9ebdafef3bf845,
  0xfd23b110962000d598488c43407369898cd0086df780826dcfa14784f38388874362851b7711dc13564441351335c71fbd7c564d5d5008f5de20d43f2476d715,
  0xe918f1658790911a71a9ae1895cfe56dbed767816e337e2f950462affb3280d8a8dcb1240620ec8f1d19c3750afcfe295c58cca117b36632414cd9e114fdb097,
  0xffffaa55ffffffffff3cd9fe3ffff676fffffffffffe00000000000000000000000000000000000000000000000000000000000000000000000000000000009d,
  0xc02100004804100000100010008001ce2064004242c812186250154c00000088ba78008a43a9713bc0abb849220e8362cc838b53cf88fcdbdd7fca83c8df8145,
  0xe318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c636318318c8c63c631318c18c6c631631818c68c63631831d3,
  0xd501973162d4017f4e3b3c9d6803d4cc46a1d457c91feb5b6c2ae77423ba41c9cfbd5f4b9235667874507e9cafb4123e1992d1c5ae75ee295087011a822a6ccf,
  0xe28ecce1de7a0326423076465160c1b03f8e721181e046ef4860ae94d7802a082f9f6007c0011f20056de200677aa7d8a47118e6692ee4b3f862c24e04b543b5,
  0xda2f36d74bc2dc29de4de92f4b37b03942173e15a2dfb67e8f09e790ed1656af5a8aadef14b696426f1e929699da0ee3ad9f21a9f66ede57d945fc165b27d217,
  0xd28550a3a8520a1c850aa14250a114ba0a144285a14228501428850a428550e128400a14850aa14250a114080a144285a14228511428852a4685d0a128500a2d,
  0xe79082499b094b2459266493608a9249b2410d3409242692a490824d934941254935265a341086119449d824691524922697926bb24949044027108a8c939a5d,
  0xedfc373f783ffbfff7fefed3fffafffefffd5fffffdefff5ffdffff3ff5ffffefefd3fef7fbf5dfff613bb59f9fb5f5bd52aefd78ebddfe6edeeffe3f3fb3df5,
  0xfff71fb6fbfffefffffffeeffffeefffef7fffebfffeffffffffefff9fffffcbfdbff0faffffdfff7f7edffee7adfffafffbfb7effffdffde7fadfdef63e806b,
  0xcaf67d473c10f4e73d6678d4a27e4eb04a743925d12c31f97efa510ca68558b2c56d839acecbe75e935f86cec7dae7c95aa0b93065a3aa924594fdfb9f521535,
  0xf6b43e3bd52841756d1a27f22a8590a8a1c43c1c36b95cc72d0102f26b6da1b238236856f7c6e6faa83cc70e84f2db44088487fd94a175f22a0d990cc1afea6b,
  0xd2a20d1b986de2152b9d93cf60bf98f68e9f9e050feb9820b006e5dc581f17a82f35a78d23fb34fab3962ae95bcf3a1e442eb5b1d72cd6956fa599483eee38c1,
  0xe52e529494a54a535294294a4a51a509294a96a5a529529494a54a52529d29ea4a52a522298a94a5a522529494a44a525294294a4842a52e294af4a5a52f554b,
  0xc942c4644b1169461581e0713ba400570237a55c9ae69e3fe58d189aa751d218208421934f2132a888e796bc1f0914a8c9b4f116358cca22c69c35596bd961e5,
  0xed7f7e78afc7d3735fc1dfb0d13887cddcd715c9fe530530e0efceaa4bcaffbaebac9e601623db36fffef47fffffefffffff00000000000000000000000003ed,
  0xf6db9b6dda6d29b61dfe73dbba5bdb6ddead69beedf6a6dbf7dadb6ddf6c6cb66db6f6d3b6db9b64997c6dbe6cb4364b96dbdb6ddb6c67be6da4b7cbaedadf35,
  0xc080a1000000000000000000000000000000000000000000003008000880000002608020010120004408001004202080000800000050000000100000000900e1,
  0xe5335f76a97c5e29d4557170cd9ef3ed53efc819fda87a566a5efe247ef102b85c7ad90c484ade030c7ebc23455e0dcbca2cec6afdf0e8c978cb6fbed5733fa5,
  0xc0000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000400000000000000000000000000000165,
  0xc924249324929249b2cf49244924649264921a4892494936593320b93f9292e992497d1449242492229293499249492449262493248e96fff3c9104432f4cdbb,
  0xc9242492249292499249492449242492249292499249492449242492249292499249492449242492249292499249492449242492249292499249492449342b29,
  0xc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000177,
  0xc00000041002400005080008021000049000000100000002080000000001021005180000000000000000210080600040082000400000183001000000200020f1,
  0xcad0ca7166b2aaf6c82b0eadfeb13409da7c2679517d4fd96f89719659133e0492d209da600753dc5c2570ce128cf985332f944143204b706bf6e990c0e43dcb,
  0xe739739c9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39cece73e73939ce9ce7e739739c9ce7ce73739c39cece73e73939ce9ce7e73973df,
  0xe0929249924949244924249a249292499249492449242493249292499a494924493424922492924992494924492424922492b24992494924492424922482926f,
  0xc000100000000000000000000000000000000000000000000000000000000000000100802000cb0040908809180008c8000000010c00012101b20000000002ad,
  0xcec727009ef07418dc89e2c96e796d44bc2244d88a0bb8ca90b4d661736b486b6e1d8352822a4697cdd0702a3d8b7c4b23ada2285a2af09234a71346ba141795,
  0xc8dce72c0e38ecaf2e3e11aef07326e3431a92ad87ef296d3d0b5d4b3d00646bebd7b3af6c9e424e074e1486d186d26997a4d9c131acb524881aecace287c057,
  0xee09f0be62014c7299e188527ab8cd004809c631f1fd50a20013331678ccad20631879842b8a122569eb18c4b1dd5e4b11bce7a14f4ae76973debf4ca768c4bd,
  0xd66cdaeef275bfd3d1ee65df430dd7ae015bd0e9a5e43890e7835e2a2a0fb702703d6c3fd50d5917f3ba77aeb851c016d26135d754c114adf303d091500462bd,
  0xfa147ea58cddaaabe6dfa04ff891009db3ff37e1272d573b7a3da5334f24f9512fda7ff4f163a72482a0edffa9140001aae21f5a64fd330f93e819a968acafb7,
  0xf718c0bc8c57cc318c99fa15236191a531828a95856d6ac833a7e3a2110dded25226ea4344cabbb2fe19de14863b8c46e31b44038c87e8ce4aea42a10afabf91,
  0xd86d99e183ba3c0870238db37f1d3f673cdec3112196acfaa1239657bcb3a3a7f6749f3229f550d5097510e5a5df0626a641e2112112f95080c5629973b1c975,
  0xfc1fc95ee7482142bccb7f0bc5cd674ad82edca61fe2653c78622ee673485cc11c993aaeeb15f77d90dfe1c6a945e239ab47e5ca3eb2aeb702f2de36626858db,
  0xf7c6bf218fcfadcba926ac5efdf60f97aeba8d5f70ceb27eff0f5d57e763bfe86dc7a86ee76b8ba9d076bf1a8f4a7fcfb0297a96c6c5a70ea7e5e3c38326ff83,
  0xc594391e8e8c24c8a7fe971d78db784d43c96ba3384f02acf71fc2506736c65f7c44ef6c3bbf7b05659b954c6b9ce96f648c900b56c5f3ca01e47384ad4de577,
  0xda975410693d3120b32997c8c728f09d09610f5fef089a7cf63ff1dcf673ffffb493c19c64167e0457646aaba4f3409f9648ff7c390c25d4a8a3d7c9b2f16b2d,
  0xf16fead9af03cfcb36571b8b3fe3cf24e313aece858b7d4e800838329c9b729ecc6d691df4ee8547a9fdb18debbca338af8214fa1e03ad53f8e3a0503bfb6735,
  0xddf3b56a7bb556afa1476addb54aa95e569c94ab62d5fa95c054af04b5a3b56adff55e2dbb466ed1b56aad5a1629c5a93ad55bf5ad1e3ba4e5ab9722daf5d7bd,
  0xd9958fe30334b89c8c02ac210c4dc8e6e610d1c958cb4d436e11aede0f72e3b8a88e18b7c663533218c68ed560b031ad4ce38aa13bbc10b6c73fe3911acc8de1,
  0xfcb0663ef5e3c922936834039fd787a0de9fdd178017021129cfb592570fd3c5e60787fc59128bce5bfcb38be0c064b08c087fd8fe6b960207c93ca4cf3c5add,
]


def binomial(n, m):
  if m > n: return 0
  if m < 0: return 0
  if n < 0: return 0
  if 2*m > n: m = n-m
  res = 1
  for i in range(m):
    res *= n-i
    res //= i+1
  return res

def binomial_sum(n, m):
  '''sum(binomial(n, i) for i in range(m+1))'''
  if m > n: return 2**n
  if m < 0: return 0
  if n < 0: return 0
  res = 1
  binom = 1
  for i in range(m):
    binom *= n-i
    binom //= i+1
    res += binom
  return res

pbits_tab = {}
def probbits(n, m):
  '''probability that a random n-bit integer has m or less bits'''
  return float(binomial_sum(n, m)) / 2**n

def bitpatterns(n):
  b = n.bit_length()
  S = sorted((n >> i) % 2**64 for i in range(b - 63))
  maxrep = 0
  for i in range(1, len(S)):
    diff = S[i-1] ^ S[i]
    rep = 64 - diff.bit_length()
    maxrep = max(rep, maxrep)
  if maxrep >= 32: return 'repeated bits ' + str(maxrep)
  
def bitcnt(n):
  res = 1
  while n:
    res += n%2
    n//=2
  return res

def test_random(p):
  if p.bit_length() == 512:
    bits = bitcnt(p)
    if bits < 185: return 'too many 0 bits'
    if bits > 330: return 'too many 1 bits'
  t = bitpatterns(p)
  if t : return t

def stats():
  cnt = 0
  for p in weak_primes:
    res = test_random(p)
    if res:
      cnt += 1
    print(res, hex(p))
  print(cnt, 'out of', len(weak_primes), 'weak primes identified')

# Heuristic tests for CVE-2017-15361.
def primes(n):
  L = [True]*(n+1)
  for j in range(2,n+1):
    if L[j]:
      for t in range(j*j, n+1, j):
        L[t] = False
  return [i for i in range(2, n+1) if L[i]]

ptab = {}
ptab[512] = primes(167)[1:]
ptab[1024] = primes(353)[1:]
ptab[2048] = primes(701)[1:]
ptab[4096] = primes(1427)[1:]

primes_cve_2017_15361 = ptab[512]
bits_cve_2017_15361 = [
            6,
            30,
            126,
            1026,
            5658,
            107286,
            199410,
            8388606,
            536870910,
            2147483646,
            67109890,
            2199023255550,
            8796093022206,
            140737488355326,
            5310023542746834,
            576460752303423486,
            1455791217086302986,
            147573952589676412926,
            20052041432995567486,
            6041388139249378920330,
            207530445072488465666,
            9671406556917033397649406,
            618970019642690137449562110,
            79228162521181866724264247298,
            2535301200456458802993406410750,
            1760368345969468176824550810518,
            50079290986288516948354744811034,
            473022961816146413042658758988474,
            10384593717069655257060992658440190,
            144390480366845522447407333004847678774,
            2722258935367507707706996859454145691646,
            174224571863520493293247799005065324265470,
            696898287454081973172991196020261297061886,
            713623846352979940529142984724747568191373310,
            1800793591454480341970779146165214289059119882,
            126304807362733370595828809000324029340048915994,
            11692013098647223345629478661730264157247460343806,
            187072209578355573530071658587684226515959365500926]

def bits(n):
  return {i for i in range(n.bit_length()) if (n >> i) & 1}

def order(a,p):
  r = 1
  a%=p
  q = a
  assert a
  while q!=1:
    q = a*q % p
    r += 1
  return r

def checkSets(debug = False):
  '''Weak moduli n have the property that the order of n modulo
     p divides the order of 65537 modulo p for all the primes
     listed.'''
  for p,bset in zip(primes_cve_2017_15361,
                    bits_cve_2017_15361):
    assert order(65537, p) == len(bits(bset))
    bitset = 2
    b = 65537 % p
    q = b
    while q != 1:
      bitset |= 1 << q
      q = q * b % p
    if debug:
      print(p)
      print(bin(bitset))
      print(bin(bset))
    assert bitset == bset
  for p in ptab[2048]:
    o1 = order(65537, p)
    o2 = order(65537, p*p)
    if o2 != o1 *p:
      print('order', p, o1, o2)

if __name__ == "__main__":
  checkSets()
  # stats()


